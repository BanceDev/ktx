dist: trusty
sudo: required

# branches:
#   only:
#   - master

os:
  - linux

# in theory travis should detect what to install,
# but we use meson, which is not supported by travis yet and we need custom commands
compiler:
  - gcc

language:
  - c

matrix:
  include:
    - os: linux
      dist: trusty
      env: TARGET=linux-amd64
    - os: linux
      dist: trusty
      env: TARGET=linux-armhf
    - os: linux
      dist: trusty
      env: TARGET=linux-i686
    - os: linux
      dist: trusty
      env: TARGET=windows-x64
    - os: linux
      dist: trusty
      env: TARGET=windows-x86

before_install:
  # show some extra info
  - export | sort
  - env | sort
  # update base distro
  - sudo apt-get update
  # - sudo apt-get -y upgrade
  # - sudo apt-get -y dist-upgrade
  # install base packages
  - sudo apt-get -y install build-essential python-virtualenv python3-dev python3-pip ninja-build cmake gcc-multilib
  # install cross complier if we gonna do binaries for windows
  - if [ -z "${TARGET##*win*}" ]; then sudo apt-get -y install mingw-w64 ; fi
  # install cross compiler tools if we gonna do binares for arm/raspberry
  # notice it will remove gcc-multilib
  - if [ -z "${TARGET##*arm*}" ]; then sudo apt-get -y install gcc-arm-linux-gnueabihf pkg-config-arm-linux-gnueabihf ;fi
  # activate virtualenv with python3, meson requires python3
  - virtualenv .venv --python=python3
  - . .venv/bin/activate
  - pip3 install --upgrade pip
  # install python packages like meson, ninja etc...
  - pip3 install -r requirements.txt

# each script section is executed in matrix build
script:
  - echo TARGET=${TARGET}
  - mkdir build_${TARGET} || true
  - meson build_${TARGET} --cross-file tools/cross-compilation/${TARGET}.txt
  - ninja -v -C build_${TARGET}
  # print basic info about complied files
  - find build_${TARGET}/ -type f -name "qwprogs.*" -exec file {} \;

deploy:
  provider: gcs
  access_key_id:
    secure: bO4VJyJr1bb07tQiJb7QQIAHS2GGoP5QzoJW6uE+dr19WMhHWwt7tN3I1raSi1LxkVMsaI9Ntx81htQIlTNo+wVfiaNAnSL+dSdryK4+rbXNESw6KW5KvSNsGvjx0Cq1M5arvwEgyK5AvSLJYEa4+iXUXNUUJUa7vqRLgESyshY=
  secret_access_key:
    secure: HTWAQcITewH6CE6vCmzFvprekbVTwOmI9UrrZCvY60oM5IiCywMzpABGpQb/hw9kn2x7fLkDmEx8/X6Oy7xzbQ4VBBM8/G1ZE3jcpDz7oH0iHoxKvsNIi1HfFm79VYrlZtQI6J3u6UMrBYlF5xgy2W4P1weQKNEmn+rSF5CqsAo=
  bucket: ktx
  on:
    repo: deurk/ktx
  skip_cleanup: true
  local_dir: build_${TARGET}
  acl: public-read

