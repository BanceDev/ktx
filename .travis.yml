dist: trusty

os:
  - linux

compiler:
  - gcc

language: c

env:
  global:
    DATE=$(date +%Y%m%d)
    TIME=$(date +%H%M%S)

jobs:
  include:
    - os: linux
      env:
        TARGET=linux-amd64
        EXTENSION=.so
    - os: linux
      env:
        TARGET=linux-armhf
        EXTENSION=.so
    - os: linux
      env:
        TARGET=linux-i686
        EXTENSION=.so
    - os: linux
      env:
        TARGET=windows-x64
        EXTENSION=.dll
    - os: linux
      env:
        TARGET=windows-x86
        EXTENSION=.dll

before_install:
  # show some extra info
  - export | sort
  - env | sort
  # update base distro
  - sudo apt-get update
  # - sudo apt-get -y upgrade
  # - sudo apt-get -y dist-upgrade
  # install base packages
  - sudo apt-get -y install build-essential python-virtualenv python3-dev python3-pip ninja-build cmake gcc-multilib
  # install cross complier if we gonna do binaries for windows
  - if [ -z "${TARGET##*win*}" ]; then sudo apt-get -y install mingw-w64 ; fi
  # install cross compiler tools if we gonna do binares for arm/raspberry
  # notice it will remove gcc-multilib
  - if [ -z "${TARGET##*arm*}" ]; then sudo apt-get -y install gcc-arm-linux-gnueabihf pkg-config-arm-linux-gnueabihf ;fi
  # activate virtualenv with python3, meson requires python3
  - virtualenv .venv --python=python3
  - . .venv/bin/activate
  - pip3 install --upgrade pip
  # install python packages like meson, ninja etc...
  - pip3 install -r requirements.txt

# each script section is executed in matrix build
script:
  - echo TARGET=${TARGET}
  - mkdir -p build_${TARGET}
  - meson build_${TARGET} --cross-file tools/cross-compilation/${TARGET}.txt
  - ninja -v -C build_${TARGET}
  # print basic info about compiled files
  - file build_${TARGET}/qwprogs${EXTENSION}
  # create hash for download verification
  - md5sum build_${TARGET}/qwprogs${EXTENSION} > build_${TARGET}/qwprogs.md5
  - mkdir -p built_assets
  - mv build_${TARGET}/qwprogs${EXTENSION} built_assets/${DATE}_${TRAVIS_COMMIT:0:7}_qwprogs${EXTENSION}
  - mv build_${TARGET}/qwprogs.md5 built_assets/${DATE}_${TRAVIS_COMMIT:0:7}_qwprogs.md5
  # update latest links
  - cp built_assets/${DATE}_${TRAVIS_COMMIT:0:7}_qwprogs${EXTENSION} built_assets/qwprogs${EXTENSION}
